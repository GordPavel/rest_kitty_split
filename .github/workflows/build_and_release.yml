name: Test and publish release

on:
  push:
    branches:
      - 'master'
jobs:
  test:
    name: Unit-Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 17
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Test with Gradle
        run: ./gradlew build
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
  docker:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v1
      - name: Checkout master
        run: git checkout master
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Increment release version
        id: version
        run: echo "::set-output name=version::$(./gradlew -q incrementVersion :showVersion | cut -d' ' -f2)"
      - name: Package jar
        id: package
        run: ./gradlew jar
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: "json_key"
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: YC Docker registry login
#        env:
#          registry_secret: ${{ secrets.YC_REGISTRY_SECRET }}
        run: >-
          cat << EOT | docker login --username json_key --password-stdin cr.yandex
            ${{ secrets.YC_REGISTRY_SECRET }}
          EOT
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: "cr.yandex/crp437fktt40et2g4q07/kitty_split:{{ steps.version.outputs.version }}"
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - name: Tag release
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ steps.version.outputs.version }}"